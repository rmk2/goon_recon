#!/usr/bin/env stklos-script

;; (hash-ref) and (hash-set!) aliases the guile functions of the same name to
;; the appropriate stklos-functions (hash-table-ref) and (hash-table-set!),
;; respectively.

(define-syntax hash-ref
  (syntax-rules ()
    ((_ hash key) (hash-table-ref hash key))))

(define-syntax hash-set! 
  (syntax-rules ()
    ((_ hash key value) (hash-table-set! hash key value))))

(define-syntax href
  (syntax-rules ()
    ((_ hashtable string x) (hash-ref hashtable (string-ref string x)))))

(define (main string)
  (if (or (zero? (length (cdr string))) (> (length (cdr string)) 1))
      (format #t "Usage: ~a <number> ~&" (car string))
      (let ((ht (make-hash-table)))
	(hash-set! ht #\M 1000)
	(hash-set! ht #\D 500)
	(hash-set! ht #\C 100)
	(hash-set! ht #\L 50)
	(hash-set! ht #\X 10)
	(hash-set! ht #\V 5)
	(hash-set! ht #\I 1)
	(let loop ((string (string-upcase (list-ref string 1))) (n 0) (x 0))
	  (if (not (= (- (string-length string) 1) x))
	      (loop string ((if (< (href ht string x) (href ht string (+ x 1))) - +) n (href ht string x)) (+ x 1))
	      (format #t "(Roman) ~a = (Arabic) ~a ~&" string (+ n (href ht string x))))))))
